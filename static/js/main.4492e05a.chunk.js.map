{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","useState","oldExpression","setOldExpression","expression","setExpression","prev","setPrev","numerics","Set","operators","buttons","putNumerics","value","putOperators","slice","putDelete","EvaluateAns","myans","eval","console","log","handleKey","event","key","has","className","tabIndex","onKeyUp","style","color","textAlign","width","background","display","height","flexDirection","alignItems","justifyContent","padding","borderRadius","overflow","margin","flexWrap","map","buttonValue","idx","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g6BAIA,SAASA,MACP,cAAwCC,oDAAS,IAAjD,yMAAKC,cAAL,cAAoBC,iBAApB,cACA,WAAkCF,oDAAS,KAA3C,0MAAKG,WAAL,cAAiBC,cAAjB,cACA,WAAsBJ,oDAAS,OAA/B,0MAAKK,KAAL,cAAWC,QAAX,cACIC,SAAW,IAAIC,IAAI,cAEnBC,UAAY,IAAID,IAAI,SAEpBE,QAAU,CACZ,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGEC,YAAc,SAAUC,GACb,QAATP,MACFH,iBAAiB,SAAWC,YAG5BC,cADiB,MAAfD,YAA+B,QAATE,KACVO,EAEAT,WAAaS,GAE7BN,QAAQ,QAENO,aAAe,SAAUD,GAEzBR,cADW,OAATC,KACYF,WAAWW,MAAM,GAAI,GAAKF,EAE1BT,WAAaS,GAE7BN,QAAQ,OAENS,UAAY,SAAUH,GACxBR,cAAc,KACdF,iBAAiB,SAAWC,aAG1Ba,YAAc,SAAdA,cACF,IAAIC,MAAQC,KAAKf,YACjBG,QAAQ,OACRJ,iBAAiBC,WAAa,OAC9BC,cAAca,OACdE,QAAQC,IAAIH,QAGVI,UAAY,SAAUC,GACxBH,QAAQC,IAAIE,EAAMC,KACdhB,SAASiB,IAAIF,EAAMC,KACrBZ,YAAYW,EAAMC,KACTd,UAAUe,IAAIF,EAAMC,KAC7BV,aAAaS,EAAMC,KACG,SAAbD,EAAMC,KACfP,eAGJ,OACE,mEAAKS,UAAU,MAAMC,SAAU,EAAGC,QAASN,UAA3C,UACE,iEACEO,MAAO,CACLC,MAAO,UACPC,UAAW,UAHf,mCAQA,mEACEF,MAAO,CACLG,MAAO,QACPC,WAAY,UACZC,QAAS,OACTC,OAAQ,OACRC,cAAe,SACfC,WAAY,WACZC,eAAgB,SAChBC,QAAS,OACTC,aAAc,OACdC,SAAU,SACVC,OAAQ,QAZZ,UAeE,0EAAKxC,gBACL,0EAAKE,gBAEP,kEACEyB,MAAO,CACLG,MAAO,QACPC,WAAY,UACZC,QAAS,OACTE,cAAe,MACfC,WAAY,WACZC,eAAgB,SAChBC,QAAS,OACTG,OAAQ,OACRF,aAAc,OACdG,SAAU,QAXd,SAcGhC,QAAQiC,KAAI,SAAUC,EAAaC,GAClC,OACE,qEACEjB,MAAO,CACLG,MAAO,OACPG,OAAQ,OACRO,OAAQ,MACRF,aAAe,MACfF,eAAgB,UAElBS,QAAS,WACa,OAAhBF,EACF7B,YACSR,SAASiB,IAAIoB,GACtBjC,YAAYiC,GACHnC,UAAUe,IAAIoB,GACvB/B,aAAa+B,GACY,MAAhBA,GACT5B,eAhBN,SAoBG4B,YASA7C,2B,mDCtJA,K,0GCYAgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3D,EAAA,EAAD,MAEF4D,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4492e05a.chunk.js","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  let [oldExpression, setOldExpression] = useState(\"\");\n  let [expression, setExpression] = useState(\"0\");\n  let [prev, setPrev] = useState(\"ANS\");\n  let numerics = new Set(\"0123456789\");\n\n  let operators = new Set(\"+-*/.\");\n\n  let buttons = [\n    \"(\",\n    \")\",\n    \"%\",\n    \"AC\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"/\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"*\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"-\",\n    \"0\",\n    \".\",\n    \"=\",\n    \"+\",\n  ];\n\n  let putNumerics = function (value) {\n    if (prev === \"ANS\") {\n      setOldExpression(\"Ans = \" + expression);\n    }\n    if (expression === \"0\" || prev === \"ANS\") {\n      setExpression(value);\n    } else {\n      setExpression(expression + value);\n    }\n    setPrev(\"NUM\");\n  };\n  let putOperators = function (value) {\n    if (prev === \"OP\") {\n      setExpression(expression.slice(0, -1) + value);\n    } else {\n      setExpression(expression + value);\n    }\n    setPrev(\"OP\");\n  };\n  let putDelete = function (value) {\n    setExpression(\"0\");\n    setOldExpression(\"Ans = \" + expression);\n  };\n\n  let EvaluateAns = function () {\n    let myans = eval(expression);\n    setPrev(\"ANS\");\n    setOldExpression(expression + \" = \");\n    setExpression(myans);\n    console.log(myans);\n  };\n\n  let handleKey = function (event) {\n    console.log(event.key);\n    if (numerics.has(event.key)) {\n      putNumerics(event.key);\n    } else if (operators.has(event.key)) {\n      putOperators(event.key);\n    } else if (event.key == \"Enter\") {\n      EvaluateAns();\n    }\n  };\n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp={handleKey}>\n      <h1\n        style={{\n          color: \"#ffffff\",\n          textAlign: \"center\",\n        }}\n      >\n        Mera Sasta Calculator\n      </h1>\n      <div\n        style={{\n          width: \"400px\",\n          background: \"#ffffff\",\n          display: \"flex\",\n          height :\"80px\",\n          flexDirection: \"column\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n          borderRadius: \"10px\",\n          overflow: \"hidden\",\n          margin: \"10px\",\n        }}\n      >\n        <h4>{oldExpression}</h4>\n        <h1>{expression}</h1>\n      </div>\n      <div\n        style={{\n          width: \"400px\",\n          background: \"#ffffff\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"flex-end\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n          margin: \"20px\",\n          borderRadius: \"10px\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {buttons.map(function (buttonValue, idx) {\n          return (\n            <button\n              style={{\n                width: \"90px\",\n                height: \"20px\",\n                margin: \"5px\",\n                borderRadius : \"4px\",\n                justifyContent: \"center\",\n              }}\n              onClick={function () {\n                if (buttonValue === \"AC\") {\n                  putDelete();\n                } else if (numerics.has(buttonValue)) {\n                  putNumerics(buttonValue);\n                } else if (operators.has(buttonValue)) {\n                  putOperators(buttonValue);\n                } else if (buttonValue === \"=\") {\n                  EvaluateAns();\n                }\n              }}\n            >\n              {buttonValue}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}